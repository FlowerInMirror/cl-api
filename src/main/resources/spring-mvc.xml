<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
    
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:jeesite.properties" />
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.thinkgem.jeesite" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 转换器配置 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	   <property name="converters">
           <set>
               <!-- 空串转换器 -->
               <bean class="com.thinkgem.jeesite.common.conversion.TrimConverter"/>
               <!-- 日期转换器 -->
              <bean class="com.thinkgem.jeesite.common.conversion.DateConverter"/>
	      </set>
	   </property>
	</bean>
	
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven conversion-service="conversionService" content-negotiation-manager="contentNegotiationManager">
        <!--自定义参数处理器-->
        <mvc:argument-resolvers>
            <!--将空字符串转为null-->
            <bean class="com.thinkgem.jeesite.common.web.adapter.EmptyStringToNullModelAttributeMethodProcessor">
                <constructor-arg name="annotationNotRequired" value="true"/>
            </bean>
        </mvc:argument-resolvers>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                	<list><value>application/json;charset=UTF-8</value></list>
                </property>
                <property name="prettyPrint" value="false"/>
                <property name="objectMapper">
                    <bean class="com.thinkgem.jeesite.common.mapper.JsonMapper"></bean>
                </property>
            </bean>
            <!-- 使用XML格式输出数据 -->
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		        <constructor-arg>
		        	<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
				        <property name="streamDriver">
				            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
				        </property>
				        <property name="annotatedClasses">
				            <list>
				                <value>com.thinkgem.jeesite.common.persistence.BaseEntity</value>
				                <value>com.thinkgem.jeesite.common.supcan.treelist.TreeList</value>
				                <value>com.thinkgem.jeesite.common.supcan.treelist.cols.Col</value>
				                <value>com.thinkgem.jeesite.common.supcan.treelist.cols.Group</value>
				            </list>
				        </property>
				    </bean>
		        </constructor-arg>
		        <property name="supportedMediaTypes" value="application/xml"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>

	<!-- 配置多视图解析器 begin -->
    <!-- html视图解析器 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="WEB-INF/views/htmls"/>
    </bean>
    <bean id="htmlviewResolver"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="suffix" value=".html" />
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="0"/>
    </bean>

    <!-- jsp视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"/> <!-- 不能用jstl的那个 -->
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="0"/>
    </bean>
    <!-- 配置多视图解析器 end -->
	
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	
	<!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>

	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>
	
	<!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
	<!--<mvc:interceptors>-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="${adminPath}/**" />-->
			<!--<mvc:exclude-mapping path="${adminPath}/"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/login"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/sys/menu/tree"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/sys/menu/treeData"/>-->
			<!--<mvc:exclude-mapping path="${adminPath}/oa/oaNotify/self/count"/>-->
			<!--<bean class="com.thinkgem.jeesite.modules.sys.interceptor.LogInterceptor" />-->
		<!--</mvc:interceptor>-->
		<!--&lt;!&ndash; 手机视图拦截器 &ndash;&gt;-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/**" />-->
			<!--<bean class="com.thinkgem.jeesite.modules.sys.interceptor.MobileInterceptor" />-->
		<!--</mvc:interceptor>-->
	<!--</mvc:interceptors>-->
	
	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<!--异常处理类-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">error/403</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
			</property>
	</bean>
	<!-- 支持Shiro对Controller的方法级AOP安全控制 end -->
	
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize" value="${web.maxUploadSize}" />  
	</bean>

	<!-- swagger配置 begin -->
	<!-- 将 springSwaggerConfig加载到spring容器 -->  
	<bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />  
	<!-- 将自定义的swagger配置类加载到spring容器 -->  
	<bean class="com.thinkgem.jeesite.common.swagger.SwaggerConfig" />
    <mvc:resources mapping="/swagger/**" location="/swagger/" cache-period="31536000"/>
    <!-- swagger配置 end -->


</beans>